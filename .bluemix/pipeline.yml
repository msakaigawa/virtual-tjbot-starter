---
stages:
  - name: Build
    inputs:
      - type: git
        branch: master
    triggers:
      - type: commit
    jobs:
      - name: Build
        type: builder
  - name: Deploy
    inputs:
      - type: job
        stage: Build
        job: Build
    triggers:
      - type: stage
    jobs:
      - name: dev
        type: deployer
        script: |-
          #!/bin/bash -x
          CLOUDANT_NAME="node-red-shared-cloudant"

          cf push "${CF_APP}" --no-start
          cf set-env "${CF_APP}" NODE_RED_STORAGE_NAME "${CLOUDANT_NAME}"
          # cf create-service cloudantNoSQLDB lite "${CLOUDANT_NAME}"
          # cf create-service cloudantNoSQLDB lite "${CLOUDANT_NAME}"
          # cf create-service text_to_speech lite TJBot_TTS
          # cf create-service speech_to_text lite TJBot_SST
          # cf create-service watson_vision_combined lite TJBot_VS
          # cf create-service language_translator lite TJBot_LT
          # ibmcloud login --apikey $API_KEY --no-region
          echo ibmcloud resource service-instance-create node-red-shared-cloudant cloudantnosqldb lite us-south -p '{"legacyCredentials": false}'
          ibmcloud resource service-instance-create node-red-shared-cloudant cloudantnosqldb lite us-south -p \'{\"legacyCredentials\": false}\'
            

          sleep 120

          cf bind-service "${CF_APP}" "${CLOUDANT_NAME}" -c '{"role":"Manager"}'

          # Start CF Application
          cf start "${CF_APP}"

          # View logs
          cf logs "${CF_APP}" --recent

        target:
          region_id: ${CF_REGION_ID}
          organization: ${CF_ORGANIZATION}
          space: ${CF_SPACE}
          application: ${CF_APP}
          api_key: ${API_KEY}
